---
import JsHeader from '../components/Header/JsHeader.astro'
import '../styles/global.css'
import i18next from 'i18next'
import { HeadHrefLangs } from 'astro-i18next/components'
import '@fontsource/lato'
import '@fontsource/lato/700.css'
import '@fontsource/lato/900.css'

export interface Props {
  title: string
}

const { title } = Astro.props
---

<html lang={i18next.resolvedLanguage}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="Hi, I'm Xavi and I'm a Frontend Developer."
    />
    <title>{title}</title>
    <HeadHrefLangs />
    <script>
      const storageKey = 'theme-preference'

      const onClick = () => {
        theme.value = theme.value === 'light' ? 'dark' : 'light'

        setPreference()
      }

      const getColorPreference = () => {
        if (localStorage.getItem(storageKey))
          return localStorage.getItem(storageKey) || ''
        else
          return window.matchMedia('(prefers-color-scheme: dark)').matches
            ? 'dark'
            : 'light'
      }

      const setPreference = () => {
        localStorage.setItem(storageKey, theme.value)
        reflectPreference()
      }

      const reflectPreference = () => {
        document.firstElementChild?.setAttribute('data-theme', theme.value)

        document
          .querySelector('#theme-toggle')
          ?.setAttribute('aria-label', theme.value)
      }

      const theme = {
        value: getColorPreference(),
      }

      reflectPreference()

      window.onload = () => {
        reflectPreference()

        document
          .querySelector('#theme-toggle')
          ?.addEventListener('click', onClick)
      }

      // sync with system changes
      window
        .matchMedia('(prefers-color-scheme: dark)')
        .addEventListener('change', ({ matches: isDark }) => {
          theme.value = isDark ? 'dark' : 'light'
          setPreference()
        })
    </script>
  </head>

  <body>
    <JsHeader />
    <slot />
  </body>
</html>
