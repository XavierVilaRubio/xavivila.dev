---
import { t, setDefaultNamespace } from 'i18next'
import { localizePath } from 'astro-i18next'
import LanguageTag, { LanguageTagProps } from './LanguageTag.astro'
setDefaultNamespace('projects')

export interface ProjectProps {
  id: number
  name: string
  languages: Array<string>
  slug: string
  previewLink?: string
}

const {
  project: { id, name, languages, slug, previewLink },
} = Astro.props
---

<script>
  const cards = document.querySelectorAll('article.card')
  cards.forEach((card) => {
    const link = card.querySelector('a')
    if (link) {
      const url = link.getAttribute('href')
      card.addEventListener('click', (e) => {
        if (url) {
          location.href = url
          e.preventDefault
        }
      })
    }
  })
</script>

{
  id != 1 ? (
    <a href={localizePath(`/projects/${slug}`)}>
      <article class="card reorder" style={`--order: ${id}`}>
        <h3>{name}</h3>
        <img
          class="thumbnail"
          src={`/projects/${slug}/thumbnail.webp`}
          alt=""
          width="312"
          height="180"
        />
        <div class="languages">
          {languages.map((language: LanguageTagProps) => (
            <LanguageTag language={language} />
          ))}
        </div>
        <p class="description">{t(`projects.${slug}`)}</p>
      </article>
    </a>
  ) : (
    <article class="card reorder" style={`--order: ${id}`}>
      <h3>{name}</h3>
      <img
        class="thumbnail"
        src={`/projects/${slug}/thumbnail.webp`}
        alt=""
        width="312"
        height="180"
      />
      <div class="languages">
        {languages.map((language: LanguageTagProps) => (
          <LanguageTag language={language} />
        ))}
      </div>
      <p class="description">{t(`projects.${slug}`)}</p>
    </article>
  )
}

<style>
  @custom-media --md-screen (min-width: 768px);

  .card {
    display: flex;
    flex-direction: column;
    margin-inline: auto;
    text-align: start;
    max-width: 100%;
    position: relative;
  }

  .thumbnail {
    order: -1;
    /* aspect-ratio: 16/9; */
    max-width: 100%;
    border-radius: 0.5rem;
    /* max-height: 80%; */
    box-shadow: rgb(149 157 165 / 20%) 0px 8px 24px;
  }

  h3 {
    margin-block-start: 0.75rem;
    font-weight: 800;
    font-size: 1.15rem;
  }

  .languages {
    margin-block-start: 0.5rem;
    display: flex;
    flex-direction: row;
    column-gap: 0.5rem;
    row-gap: 0.25rem;
    overflow-x: scroll;
    flex-wrap: wrap;
  }

  .languages::-webkit-scrollbar {
    display: none;
  }

  .description {
    margin-top: 1rem;
    line-height: 1.15;
    font-size: 1rem;
    color: rgba(var(--color-text-rgb), 0.8);
    white-space: pre-wrap;

    @media (--md-screen) {
      font-size: 1.1rem;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .card {
      opacity: 0;
      transform: translateY(1rem);
      transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
      transition-delay: calc(200ms * var(--order));
    }

    .show {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
