---
import { t } from 'i18next'
import LinkButton from '../../../Common/LinkButton/LinkButton.astro'
import LanguageTag, { LanguageTagProps } from './LanguageTag.astro'

export interface ProjectProps {
  id: number
  name: string
  languages: Array<string>
  previewLink: string
  githubLink: string
  image: string
  slug: string
}

const {
  project: { id, name, languages, previewLink, githubLink, image, slug },
} = Astro.props
---

<div class="project-card" style={`--order: ${id}`}>
  <img class="image" src={image} alt="" />
  <h3>{name}</h3>
  <div class="languages">
    {
      languages.map((language: LanguageTagProps) => (
        <LanguageTag language={language} />
      ))
    }
  </div>
  <p class="description">{t(`projects.${slug}`)}</p>
  <div class="links">
    <LinkButton
      href={previewLink}
      label="Preview"
      iconLeft="eva:eye-outline"
      target="_blank"
    />
    <LinkButton
      href={githubLink}
      label="Github repo"
      theme="secondary"
      iconLeft="eva:github-outline"
      target="_blank"
    />
  </div>
</div>

<style>
  .project-card {
    display: flex;
    flex-direction: column;
    margin-inline: auto;
    text-align: start;
    max-width: 100%;
  }

  .image {
    max-width: 100%;
    border-radius: 0.5rem;
    max-height: 80%;
    box-shadow: rgb(149 157 165 / 20%) 0px 8px 24px;
  }

  h3 {
    margin-block-start: 0.75rem;
    font-weight: 800;
    font-size: 1.15rem;
  }

  .languages {
    margin-block-start: 0.5rem;
    display: flex;
    flex-direction: row;
    column-gap: 0.5rem;
    row-gap: 0.25rem;
    overflow-x: scroll;
  }

  .languages::-webkit-scrollbar {
    display: none;
  }

  .description {
    margin-block-start: 1rem;
    font-size: 1rem;
    color: rgba(var(--color-text-rgb), 0.8);
  }

  .links {
    margin-block-start: 1rem;
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
  }

  @media (min-width: 768px) {
    .links {
      font-size: 1rem;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .project-card {
      opacity: 0;
      transform: translateY(1rem);
      transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
      transition-delay: calc(200ms * var(--order));
    }

    .show {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (hover: hover) {
    .links {
      opacity: 0;
      transform: translateY(50%);
      transition: all 0.3s ease-in-out;
    }

    .project-card:hover .links {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>
